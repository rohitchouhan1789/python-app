# This is a basic workflow to help you get started with Actions
name: Build and Push Docker Image

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      ImageVersion:
        description: 'Provide the Image Version to Build'
        required: true
        default: '1.0'
      ImageName:
        description: 'Name of the Image'
        required: true
        default: 'python_app'
      DockerPath:
        description: 'Provide the Docker Pathj Relative to Git'
        required: true
        default: 'app/Dockerfile'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  BuildScanPush:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      # Build the Docker Image
      - run: echo "${{ github.workspace }}"
      - run: ls -al
      - run: pwd
      - run: |
          docker build ${{ github.workspace }}/${{ github.event.inputs.DockerPath }} -t ${{ secrets.ACR_SERVER }}/${{ github.event.inputs.ImageName }}:${{ github.event.inputs.ImageVersion }}
          
      # Publish the Docker Image to ACR
      - run: |
          docker push ${{ secrets.ACR_SERVER }}/${{ github.event.inputs.ImageName }}:${{ github.event.inputs.ImageVersion }}